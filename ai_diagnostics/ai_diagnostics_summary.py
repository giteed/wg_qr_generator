#!/usr/bin/env python3
# ai_diagnostics/ai_diagnostics_summary.py
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–æ–±—â–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ wg_qr_generator.
# –í–µ—Ä—Å–∏—è: 1.3
# –û–±–Ω–æ–≤–ª–µ–Ω–æ: 2024-12-02
# –í–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Ä—Ç–æ–≤, —Å—Ç–∞—Ç—É—Å–∞ WireGuard –∏ —Ñ–∞–µ—Ä–≤–æ–ª–∞.

import subprocess
from pathlib import Path
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
PROJECT_ROOT = Path(__file__).resolve().parent.parent
sys.path.append(str(PROJECT_ROOT))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from settings import PROJECT_DIR

# –ü—É—Ç–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
LOG_DIR = PROJECT_DIR / "user" / "data" / "logs"
SUMMARY_REPORT_PATH = LOG_DIR / "summary_report.txt"
DEBUG_REPORT_PATH = PROJECT_DIR / "ai_diagnostics" / "debug_report.txt"
TEST_REPORT_PATH = PROJECT_DIR / "ai_diagnostics" / "test_report.txt"

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
LOG_DIR.mkdir(parents=True, exist_ok=True)


def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    try:
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, check=True)
        return result.stdout.strip()
    except subprocess.CalledProcessError as e:
        return f"–û—à–∏–±–∫–∞: {e.stderr.strip()}"


def check_ports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã."""
    command = ["ss", "-tuln"]
    result = run_command(command)
    open_ports = []
    for line in result.splitlines():
        if ":51820" in line:
            open_ports.append("51820 (WireGuard)")
        if ":7860" in line:
            open_ports.append("7860 (Gradio)")
    return open_ports


def check_firewall():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∞–µ—Ä–≤–æ–ª–∞ –∏ —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤."""
    command_status = ["firewall-cmd", "--state"]
    command_ports = ["firewall-cmd", "--list-ports"]
    status = run_command(command_status)
    if status != "running":
        return f"–§–∞–µ—Ä–≤–æ–ª: {status}", []
    open_ports = run_command(command_ports).split()
    return f"–§–∞–µ—Ä–≤–æ–ª: –ê–∫—Ç–∏–≤–µ–Ω", open_ports


def check_wireguard_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ WireGuard."""
    command_status = ["systemctl", "is-active", "wg-quick@wg0.service"]
    command_peers = ["wg", "show"]
    status = run_command(command_status)
    wg_info = run_command(command_peers) if status == "active" else "WireGuard –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω."
    return status, wg_info


def parse_test_report():
    """–ü–∞—Ä—Å–∏—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    if TEST_REPORT_PATH.exists():
        with open(TEST_REPORT_PATH, "r", encoding="utf-8") as file:
            content = file.read()
            total_users = content.count("peer")
            return total_users
    return 0


def generate_summary():
    """–°–æ–∑–¥–∞–µ—Ç –æ–±–æ–±—â–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç."""
    print(" ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–æ–±—â–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    total_users = parse_test_report()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ WireGuard
    wg_status, wg_info = check_wireguard_status()
    peers_count = wg_info.count("peer:") if "peer:" in wg_info else 0

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    open_ports = check_ports()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞
    firewall_status, firewall_ports = check_firewall()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    summary = [
        " === üìã –û–±–æ–±—â–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ ===",
        "\n üìÇ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:",
        f"- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}",
        "\n üîí WireGuard:",
        f" - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ peer: {peers_count}",
        f" - –°—Ç–∞—Ç—É—Å WireGuard: {wg_status}",
        f" - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ WireGuard:\n{wg_info if wg_status == 'active' else ''}",
        "\n üåê Gradio:",
        f" - –°—Ç–∞—Ç—É—Å: {'–ù–µ –∑–∞–ø—É—â–µ–Ω' if '7860 (Gradio)' not in open_ports else '–ó–∞–ø—É—â–µ–Ω'}",
        "   - –î–ª—è –∑–∞–ø—É—Å–∫–∞:",
        f"    1Ô∏è‚É£  –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: cd {PROJECT_DIR}",
        "    2Ô∏è‚É£  –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: python3 main.py",
        "\n üî• –§–∞–µ—Ä–≤–æ–ª:",
        f" - {firewall_status}",
        " - –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:",
        f"  - {', '.join(firewall_ports) if firewall_ports else '–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤'}",
        "\n üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:",
        " - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ peer —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
        " - –ï—Å–ª–∏ Gradio –Ω–µ –∑–∞–ø—É—â–µ–Ω, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.",
        " - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—Ä—Ç—ã –¥–ª—è Gradio –∏ WireGuard –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ —Ñ–∞–µ—Ä–≤–æ–ª."
    ]

    with open(SUMMARY_REPORT_PATH, "w", encoding="utf-8") as file:
        file.write("\n".join(summary))

    print(f" ‚úÖ –û–±–æ–±—â–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:\n üìÇ  {SUMMARY_REPORT_PATH}")


if __name__ == "__main__":
    generate_summary()
