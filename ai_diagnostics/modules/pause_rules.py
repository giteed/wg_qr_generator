#!/usr/bin/env python3
# ai_diagnostics/modules/pause_rules.py
# Модуль для определения правил пауз и эмоционального чтения текста.
# Версия: 1.0
# Обновлено: 2024-11-29

import time
import random

def get_pause_rules():
    """
    Возвращает массив с правилами пауз для различных знаков препинания и ситуаций.
    """
    return [
        {
            "trigger": ".",  # Точка
            "pause_range": (0.4, 0.8),  # Пауза от 0.4 до 0.8 секунд
            "emotion": "нейтральный конец предложения"
        },
        {
            "trigger": ",",  # Запятая
            "pause_range": (0.2, 0.4),  # Короткая пауза
            "emotion": "перечисление или лёгкая пауза"
        },
        {
            "trigger": "!",  # Восклицательный знак
            "pause_range": (0.5, 1.0),  # Более длинная пауза
            "emotion": "восхищение, удивление или сильное чувство"
        },
        {
            "trigger": "?",  # Вопросительный знак
            "pause_range": (0.6, 1.2),  # Пауза с обдумыванием
            "emotion": "вопрос, ожидание ответа"
        },
        {
            "trigger": ":",  # Двоеточие
            "pause_range": (0.3, 0.7),  # Небольшая пауза
            "emotion": "ожидание важной информации"
        },
        {
            "trigger": ";",  # Точка с запятой
            "pause_range": (0.3, 0.6),  # Короткая пауза
            "emotion": "дополнительное уточнение"
        },
        {
            "trigger": "—",  # Дефис
            "pause_range": (0.3, 0.5),  # Лёгкая пауза
            "emotion": "резкое переключение мысли"
        },
        {
            "trigger": "\n",  # Перенос строки
            "pause_range": (0.6, 1.0),  # Средняя пауза
            "emotion": "начало новой строки или абзаца"
        }
    ]


def apply_pause(char, rules):
    """
    Применяет паузу в зависимости от символа и правил.

    Args:
        char (str): Символ, после которого нужно сделать паузу.
        rules (list): Список правил пауз.

    Returns:
        None
    """
    for rule in rules:
        if char == rule["trigger"]:
            pause = random.uniform(*rule["pause_range"])
            time.sleep(pause)
            break
