#!/usr/bin/env python3
# wg_qr_generator/settings.py
# ===========================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ wg_qr_generator
# ===========================================
# –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞, –≤–∫–ª—é—á–∞—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º,
# –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º, –∞ —Ç–∞–∫–∂–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
# –û–Ω —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑—É–µ—Ç –≤—Å–µ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.
#
# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# ---------------------
# from settings import BASE_DIR, WG_CONFIG_DIR, GRADIO_PORT
# 
# print(f"–ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {BASE_DIR}")
# print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π WireGuard: {WG_CONFIG_DIR}")
# print(f"–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Gradio: {GRADIO_PORT}")
#
# –í–ê–ñ–ù–û: –í—Å–µ –ø—É—Ç–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ BASE_DIR.
# ===========================================
# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
# –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥—É–ª—å logging.
# –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é LOG_LEVEL:
# - DEBUG: –í—ã–≤–æ–¥ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –≤–∫–ª—é—á–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ.
# - INFO: –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –±–µ–∑ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
# - WARNING: –¢–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏.
# - ERROR: –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏.
# –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –≤ –∫–æ–Ω—Å–æ–ª—å, —Ç–∞–∫ –∏ –≤ —Ñ–∞–π–ª, –ø—É—Ç—å –∫ –∫–æ—Ç–æ—Ä–æ–º—É —É–∫–∞–∑–∞–Ω –≤ LOG_FILE_PATH.
#
# –í–µ—Ä—Å–∏—è: 1.4 (2024-12-02) 18:00

from pathlib import Path

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).resolve().parent  # –ü—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ wg_qr_generator
PROJECT_DIR = BASE_DIR  # –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, PROJECT_DIR —Ä–∞–≤–µ–Ω BASE_DIR

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
WG_CONFIG_DIR = BASE_DIR / "user/data/wg_configs"
QR_CODE_DIR = BASE_DIR / "user/data/qrcodes"
STALE_CONFIG_DIR = BASE_DIR / "user/data/usr_stale_config"
USER_DB_PATH = BASE_DIR / "user/data/user_records.json"
IP_DB_PATH = BASE_DIR / "user/data/ip_records.json"
SERVER_CONFIG_FILE = Path("/etc/wireguard/wg0.conf")  # –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É —Å–µ—Ä–≤–µ—Ä–∞ WireGuard
PARAMS_FILE = Path("/etc/wireguard/params")          # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ WireGuard

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã WireGuard
DEFAULT_TRIAL_DAYS = 30                              # –ë–∞–∑–æ–≤—ã–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –¥–Ω—è—Ö

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_DIR = BASE_DIR / "user/data/logs"
DIAGNOSTICS_LOG = LOG_DIR / "diagnostics.log"
SUMMARY_REPORT_PATH = LOG_DIR / "summary_report.txt"
LOG_FILE_PATH = LOG_DIR / "app.log"                  # –§–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
LOG_LEVEL = "DEBUG"                                  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: DEBUG, INFO, WARNING, ERROR

# –ü—É—Ç–∏ –∫ –æ—Ç—á–µ—Ç–∞–º –∏ –±–∞–∑–µ —Å–æ–æ–±—â–µ–Ω–∏–π
DEBUG_REPORT_PATH = BASE_DIR / "ai_diagnostics/debug_report.txt"  # –ü—É—Ç—å –∫ –æ—Ç—á–µ—Ç—É –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
TEST_REPORT_PATH = BASE_DIR / "ai_diagnostics/test_report.txt"    # –ü—É—Ç—å –∫ –æ—Ç—á–µ—Ç—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
MESSAGES_DB_PATH = BASE_DIR / "ai_diagnostics/messages_db.json"   # –ü—É—Ç—å –∫ –±–∞–∑–µ —Å–æ–æ–±—â–µ–Ω–∏–π

# –ü—É—Ç–∏ –∫ —Å–ø—Ä–∞–≤–∫–µ
HELP_JSON_PATH = BASE_DIR / "ai_diagnostics/ai_help/ai_help.json"  # –ù–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –º–æ–¥—É–ª–µ–π –∏ —É—Ç–∏–ª–∏—Ç
MODULES_DIR = BASE_DIR / "modules"
AI_DIAGNOSTICS_DIR = BASE_DIR / "ai_diagnostics"

# –ü–æ—Ä—Ç –¥–ª—è Gradio
GRADIO_PORT = 7860


def check_paths():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π."""
    paths = {
        "BASE_DIR": BASE_DIR,
        "PROJECT_DIR": PROJECT_DIR,
        "WG_CONFIG_DIR": WG_CONFIG_DIR,
        "QR_CODE_DIR": QR_CODE_DIR,
        "USER_DB_PATH": USER_DB_PATH,
        "IP_DB_PATH": IP_DB_PATH,
        "SERVER_CONFIG_FILE": SERVER_CONFIG_FILE,
        "PARAMS_FILE": PARAMS_FILE,
        "LOG_DIR": LOG_DIR,
        "DIAGNOSTICS_LOG": DIAGNOSTICS_LOG,
        "SUMMARY_REPORT_PATH": SUMMARY_REPORT_PATH,
        "DEBUG_REPORT_PATH": DEBUG_REPORT_PATH,
        "TEST_REPORT_PATH": TEST_REPORT_PATH,
        "MESSAGES_DB_PATH": MESSAGES_DB_PATH,
        "HELP_JSON_PATH": HELP_JSON_PATH,
        "MODULES_DIR": MODULES_DIR,
        "AI_DIAGNOSTICS_DIR": AI_DIAGNOSTICS_DIR,
    }
    status = []
    for name, path in paths.items():
        exists = "‚úÖ  –î–æ—Å—Ç—É–ø–µ–Ω" if path.exists() else "‚ùå  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        status.append(f"{name}: {exists} ({path})")
    return "\n".join(status)


if __name__ == "__main__":
    print("\n=== üõ†Ô∏è  –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ wg_qr_generator  ===\n")
    print(f"  –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {BASE_DIR}")
    print(f"  –ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Gradio: {GRADIO_PORT}\n")

    print("=== üìÇ  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π  ===\n")
    print(check_paths())
    print("\n")
