#!/usr/bin/env python3
# menu.py
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º wg_qr_generator

import os
import subprocess
import signal
import sys
from modules.manage_users_menu import manage_users_menu
from modules.port_manager import handle_port_conflict  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø–æ—Ä—Ç–æ–≤

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
WIREGUARD_BINARY = "/usr/bin/wg"
WIREGUARD_INSTALL_SCRIPT = "wireguard-install.sh"
ADMIN_PORT = 7860
GRADIO_ADMIN_SCRIPT = os.path.abspath(os.path.join(os.path.dirname(__file__), "gradio_admin/main_interface.py"))
CLEAN_SCRIPT = os.path.abspath(os.path.join(os.path.dirname(__file__), "clean_user_data.sh"))
TEST_REPORT_SCRIPT = os.path.abspath(os.path.join(os.path.dirname(__file__), "test_report_generator.py"))
TEST_REPORT_FILE = os.path.abspath(os.path.join(os.path.dirname(__file__), "test_report.txt"))

def check_wireguard_installed():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ WireGuard."""
    return os.path.isfile(WIREGUARD_BINARY)


def install_wireguard():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard."""
    if os.path.isfile(WIREGUARD_INSTALL_SCRIPT):
        print("  üîß  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard...")
        subprocess.run(["bash", WIREGUARD_INSTALL_SCRIPT])
    else:
        print(f"  ‚ùå  –°–∫—Ä–∏–ø—Ç {WIREGUARD_INSTALL_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ª–æ–∂–∏—Ç–µ –µ–≥–æ –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.")


def remove_wireguard():
    """–£–¥–∞–ª–µ–Ω–∏–µ WireGuard."""
    print("  ‚ùå  –£–¥–∞–ª–µ–Ω–∏–µ WireGuard...")
    subprocess.run(["yum", "remove", "wireguard", "-y"], stderr=subprocess.DEVNULL) or \
    subprocess.run(["apt", "remove", "wireguard", "-y"], stderr=subprocess.DEVNULL)


def open_firewalld_port(port):
    """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ firewalld."""
    print(f"  üîì  –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ {port} —á–µ—Ä–µ–∑ firewalld...")
    try:
        subprocess.run(["sudo", "firewall-cmd", "--add-port", f"{port}/tcp"], check=True)
        print(f"  ‚úÖ  –ü–æ—Ä—Ç {port} –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ firewalld (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞).")
    except subprocess.CalledProcessError:
        print(f"  ‚ùå  –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Ä—Ç {port} —á–µ—Ä–µ–∑ firewalld.")


def close_firewalld_port(port):
    """–ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ firewalld."""
    print(f"  üîí  –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ {port} —á–µ—Ä–µ–∑ firewalld...")
    try:
        subprocess.run(["sudo", "firewall-cmd", "--remove-port", f"{port}/tcp"], check=True)
        print(f"  ‚úÖ  –ü–æ—Ä—Ç {port} —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ firewalld (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞).")
    except subprocess.CalledProcessError:
        print(f"  ‚ùå  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ—Ä—Ç {port} —á–µ—Ä–µ–∑ firewalld.")


def run_gradio_admin_interface():
    """–ó–∞–ø—É—Å–∫ Gradio –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–æ—Ä—Ç–æ–≤ –∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤—ã—Ö–æ–¥–∞."""
    def handle_exit_signal(sig, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–∞."""
        close_firewalld_port(ADMIN_PORT)
        sys.exit(0)

    if not os.path.exists(GRADIO_ADMIN_SCRIPT):
        print(f"  ‚ùå  –°–∫—Ä–∏–ø—Ç {GRADIO_ADMIN_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ—Ä—Ç–∞
    conflict_action = handle_port_conflict(ADMIN_PORT)
    if conflict_action == "ignore":
        return

    # –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ firewalld
    open_firewalld_port(ADMIN_PORT)

    signal.signal(signal.SIGINT, handle_exit_signal)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C

    try:
        print(f"  üåê  –ó–∞–ø—É—Å–∫ Gradio –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É {ADMIN_PORT}...")
        subprocess.run(["python3", GRADIO_ADMIN_SCRIPT])
    finally:
        close_firewalld_port(ADMIN_PORT)


def run_clean_user_data():
    """–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö."""
    if not os.path.exists(CLEAN_SCRIPT):
        print(f"  ‚ùå  –°–∫—Ä–∏–ø—Ç {CLEAN_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    print("  üîÑ  –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
    subprocess.run(["bash", CLEAN_SCRIPT])


def run_test_report_generator():
    """–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞."""
    if not os.path.exists(TEST_REPORT_SCRIPT):
        print(f"  ‚ùå  –°–∫—Ä–∏–ø—Ç {TEST_REPORT_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    print("  üìã  –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞...")
    subprocess.run(["python3", TEST_REPORT_SCRIPT])


def display_test_report():
    """–í—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å."""
    if os.path.exists(TEST_REPORT_FILE):
        with open(TEST_REPORT_FILE, "r") as file:
            print(file.read())
    else:
        print(f"  ‚ùå  –§–∞–π–ª –æ—Ç—á–µ—Ç–∞ {TEST_REPORT_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω.")


def update_project_dependencies():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    print("\n  üõ†Ô∏è   –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        print("  üîÑ  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —á–µ—Ä–µ–∑ git...")
        subprocess.run(["git", "pull", "origin", "main"], check=True)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        print("  üì¶  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ pip...")
        subprocess.run(["pip", "install", "-r", "requirements.txt", "--upgrade"], check=True)
        
        print("\n  ‚úÖ  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    except subprocess.CalledProcessError as e:
        print(f"  ‚ùå  –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
    except FileNotFoundError:
        print("  ‚ùå  Git –∏–ª–∏ pip –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


def show_main_menu():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    while True:
        wireguard_installed = check_wireguard_installed()
        print("\n==================  –ú–µ–Ω—é  ==================\n")
        print(" 1. üõ†Ô∏è   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        print(" 2. üß™   –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
        print(" u. üõ†Ô∏è   –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        print("--------------------------------------------")
        print(" 3. üåê   –û—Ç–∫—Ä—ã—Ç—å Gradio –∞–¥–º–∏–Ω–∫—É")
        print(" 4. üë§   –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        print("--------------------------------------------")
        if wireguard_installed:
            print(" 5. ‚ôªÔ∏è   –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WireGuard")
            print(" 6. üóëÔ∏è   –£–¥–∞–ª–∏—Ç—å WireGuard")
        else:
            print(" 5. ‚öôÔ∏è   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WireGuard")
        print("--------------------------------------------")
        print(" 7. üßπ   –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print(" 8. üìã   –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞")
        print(" 9. üìÑ   –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –æ—Ç–ª–∞–¥–∫–∏")
        print("\n\t 0 –∏–ª–∏ q. –í—ã—Ö–æ–¥")
        print(" ==========================================\n")
        
        choice = input(" –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip().lower()

        if choice == "1":
            from modules.project_status import show_project_status
            show_project_status()
        elif choice == "2":
            print("  üîç  –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
            subprocess.run(["pytest"])
        elif choice == "u":
            update_project_dependencies()
        elif choice == "3":
            run_gradio_admin_interface()
        elif choice == "4":
            manage_users_menu()
        elif choice == "5":
            if wireguard_installed:
                print("  ‚ôªÔ∏è   –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard...")
                remove_wireguard()
                install_wireguard()
            else:
                install_wireguard()
        elif choice == "6" and wireguard_installed:
            remove_wireguard()
        elif choice == "7":
            run_clean_user_data()
        elif choice == "8":
            run_test_report_generator()
        elif choice == "9":
            display_test_report()
        elif choice in {"0", "q"}:
            print("üëã  –í—ã—Ö–æ–¥. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("\n ! ‚ö†Ô∏è  –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    show_main_menu()
