#!/usr/bin/env python3
# menu.py
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º wg_qr_generator

import os
import sys
import subprocess
from modules.firewall_utils import get_external_ip
from settings import LOG_DIR, LOG_FILE_PATH, DIAGNOSTICS_LOG

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
project_root = os.path.dirname(os.path.abspath(__file__))
if project_root not in sys.path:
    sys.path.insert(0, project_root)

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
from modules.wireguard_utils import check_wireguard_installed, install_wireguard, remove_wireguard
from modules.firewall_utils import open_firewalld_port, close_firewalld_port
from modules.gradio_utils import run_gradio_admin_interface
from modules.port_manager import handle_port_conflict
from modules.report_utils import generate_project_report, display_test_report, display_test_summary
from modules.report_utils import display_summary_report
from modules.update_utils import update_project
from modules.sync import sync_users_with_wireguard
from modules.manage_users_menu import manage_users_menu
from modules.debugger import run_diagnostics
from ai_diagnostics.ai_diagnostics import display_message_slowly


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã
def initialize_project():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤."""
    LOG_DIR.mkdir(parents=True, exist_ok=True)  # –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if not LOG_FILE_PATH.exists():
        LOG_FILE_PATH.touch()  # –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        print(f"–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –ª–æ–≥–∞: {LOG_FILE_PATH}")

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
initialize_project()

def show_diagnostics_log():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∂—É—Ä–Ω–∞–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏."""
    if os.path.exists(DIAGNOSTICS_LOG):
        print("\n === üõ†Ô∏è  –ñ—É—Ä–Ω–∞–ª –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏  ===\n")
        with open(DIAGNOSTICS_LOG, "r") as log_file:
            print(log_file.read())
    else:
        print("\n ‚ùå  –ñ—É—Ä–Ω–∞–ª –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã
def initialize_project():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤."""
    LOG_DIR.mkdir(parents=True, exist_ok=True)  # –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if not LOG_FILE_PATH.exists():
        LOG_FILE_PATH.touch()  # –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        print(f"–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –ª–æ–≥–∞: {LOG_FILE_PATH}")

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
initialize_project()

def show_main_menu():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    local_print_speed = 0.005  # –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏
    while True:
        wireguard_installed = check_wireguard_installed()
        display_message_slowly(f"\nüõ°Ô∏è  ======  Menu wg_qr_generator  ======= üõ°Ô∏è\n", print_speed=local_print_speed, indent=False)  # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
        print(f"  i. üõ†Ô∏è   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        print(f"  t. üß™  –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
        print(f" up. üîÑ  –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        display_message_slowly(f" ------------------------------------------", print_speed=local_print_speed, indent=False)  # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
        print(f"  g. üåê  –û—Ç–∫—Ä—ã—Ç—å Gradio –∞–¥–º–∏–Ω–∫—É")
        print(f"  u. üë§  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        print(f" sy. üì°  –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print(f" du. üßπ  –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        display_message_slowly(f" ------------------------------------------", print_speed=local_print_speed, indent=False)  # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
        if wireguard_installed:
            print(f" rw. ‚ôªÔ∏è   –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WireGuard")
            print(f" dw. üóëÔ∏è   –£–¥–∞–ª–∏—Ç—å WireGuard")
        else:
            print(f" iw. ‚öôÔ∏è   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WireGuard")
        display_message_slowly(f" ------------------------------------------", print_speed=local_print_speed, indent=False)  # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
        print(f" rg. üìã  –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞")
        print(f" sr. üóÇÔ∏è   –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç")
        print(f" dg. üõ†Ô∏è   –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–æ–µ–∫—Ç–∞")
        print(f" fr. üìÑ  –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç")
        print(f" sd. üìã  –ü–æ–∫–∞–∑–∞—Ç—å –∂—É—Ä–Ω–∞–ª –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
        display_message_slowly(f"\nüß© === –†–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ==== üß©\n", print_speed=local_print_speed, indent=False)  # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
        print(f" aih. üó®Ô∏è  –ü–æ–º–æ—â—å –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
        print(f" aid. ü§ñ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞")
        print(f"\n\t 0 –∏–ª–∏ q. –í—ã—Ö–æ–¥")
        display_message_slowly(f" ==========================================\n", print_speed=local_print_speed, indent=False)  # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ë–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤ –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞

        choice = input(" –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip().lower()
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞...


        if choice == "i":
            from modules.project_status import show_project_status
            show_project_status()
        elif choice == "t":
            print(f" üîç  –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
            subprocess.run(["pytest"])
        elif choice == "up":
            update_project()
        elif choice == "g":
            port = 7860
            action = handle_port_conflict(port)
            if action == "ok":
                print(f"\n ‚úÖ  –ó–∞–ø—É—Å–∫–∞–µ–º Gradio –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å http://{get_external_ip()}:{port}")
                run_gradio_admin_interface(port=port)
            elif action == "kill":
                print(f" ‚úÖ  –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º Gradio http://{get_external_ip()}:{port}.")
                run_gradio_admin_interface(port=port)
            elif action == "restart":
                print(f" üö´ –ü–æ—Ä—Ç {port} –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç.")
            elif action == "exit":
                print(f"\n üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
        elif choice == "u":
            manage_users_menu()
        elif choice == "rw":
            remove_wireguard()
            install_wireguard()
        elif choice == "iw" and wireguard_installed:
            remove_wireguard()
        elif choice == "du":
            from modules.user_data_cleaner import clean_user_data
            clean_user_data()
        elif choice == "rg":
            print(f" üîç  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
            generate_project_report()
        elif choice == "sr":
            print(f" üìÇ  –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
            display_summary_report()
        elif choice == "fr":
            print(f" üìÑ  –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
            display_test_report()
        elif choice == "sy":
            sync_users_with_wireguard()
        elif choice == "dg":
            print(f" üîç  –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞...")
            run_diagnostics()
        elif choice == "sd":
            print(f" üìã  –ü–æ–∫–∞–∑ –∂—É—Ä–Ω–∞–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...")
            show_diagnostics_log()
        elif choice == "aih":
            print(f" ü§ñ  –ó–∞–ø—É—Å–∫ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
            os.system("python3 ai_diagnostics/ai_help/ai_help.py")
        elif choice == "aid":
            print(f"\n    ü§ñ  –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞...")
            os.system("python3 ai_diagnostics/ai_diagnostics.py")
        elif choice in {"0", "q"}:
            print("\n üëã  –í—ã—Ö–æ–¥. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!\n")
            break
        else:
            print(f"\n  ‚ö†Ô∏è  –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


if __name__ == "__main__":
    show_main_menu()
