#!/bin/bash
# run_project.sh
## –£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–µ–∫—Ç–∞ wg_qr_generator

# –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
GITHUB_REPO="https://github.com/licht8/wg_qr_generator.git"
PROJECT_DIR="wg_qr_generator"
VENV_DIR="venv" # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ $PROJECT_DIR
WIREGUARD_INSTALL_SCRIPT="wireguard-install.sh"
WIREGUARD_BINARY="/usr/bin/wg"

echo -e "\n=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ wg_qr_generator ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫ —Å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (sudo)."
    echo "–ù–∞–ø—Ä–∏–º–µ—Ä: sudo $0"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Git
if ! command -v git &>/dev/null; then
  echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js
if ! command -v node &>/dev/null; then
  echo "üîÑ Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
  curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash - || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Node.js."; exit 1; }
  sudo dnf install -y nodejs || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Node.js."; exit 1; }
  echo "‚úÖ Node.js —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
else
  echo "‚úÖ Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í–µ—Ä—Å–∏—è: $(node --version)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç Python 3.11, –µ—Å–ª–∏ –æ–Ω —Å–±–∏—Ç
PYTHON_PATH="/usr/bin/python3.11"
if [ -f "$PYTHON_PATH" ]; then
  sudo alternatives --set python3 $PYTHON_PATH || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Python 3.11."; exit 1; }
  echo "‚úÖ Python 3.11 –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è."
else
  echo "‚ùå Python 3.11 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é."
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É—Ç–∏–ª–∏—Ç—ã bc
install_bc_if_not_found() {
    if ! command -v bc &>/dev/null; then
        echo "üîÑ –£—Ç–∏–ª–∏—Ç–∞ 'bc' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        sudo dnf install -y bc || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —É—Ç–∏–ª–∏—Ç—ã 'bc'."; exit 1; }
        echo "‚úÖ –£—Ç–∏–ª–∏—Ç–∞ 'bc' —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
    else
        echo "‚úÖ –£—Ç–∏–ª–∏—Ç–∞ 'bc' —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
    fi
}

install_bc_if_not_found

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
PYTHON_MAJOR=$(python3 -c 'import sys; print(sys.version_info.major)')
PYTHON_MINOR=$(python3 -c 'import sys; print(sys.version_info.minor)')

if (( PYTHON_MAJOR < 3 || (PYTHON_MAJOR == 3 && PYTHON_MINOR < 8) )); then
  echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python –≤–µ—Ä—Å–∏–∏ 3.8 –∏–ª–∏ –≤—ã—à–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–µ—Ä—Å–∏—é."
  exit 1
else
  echo "‚úÖ Python –≤–µ—Ä—Å–∏–∏ $PYTHON_MAJOR.$PYTHON_MINOR –æ–±–Ω–∞—Ä—É–∂–µ–Ω."
fi

# –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ ! -d "$PROJECT_DIR" ]; then
  echo "üîÑ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
  git clone "$GITHUB_REPO" || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."; exit 1; }
  FIRST_INSTALL=true
else
  echo "üîÑ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª—è–µ–º..."
  git -C "$PROJECT_DIR" pull || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."; exit 1; }
  FIRST_INSTALL=false
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_DIR" || exit

# –°–æ–∑–¥–∞–µ–º –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ ! -d "$VENV_DIR" ]; then
  echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
  python3 -m venv "$VENV_DIR" || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è."; exit 1; }
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source "$VENV_DIR/bin/activate" || { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ."; exit 1; }

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ "$FIRST_INSTALL" = true ]; then
  pip install --upgrade pip
  pip install -r "requirements.txt" || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."; exit 1; }
else
  pip install --upgrade pip &>/dev/null
  pip install -r "requirements.txt" &>/dev/null
  echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ menu.py
if [ ! -f "menu.py" ]; then
  echo "‚ùå –§–∞–π–ª menu.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ $PROJECT_DIR."
  exit 1
fi

# –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –º–µ–Ω—é
echo -e "\n=== –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ ==="
echo "üìå –í–µ—Ä—Å–∏—è –û–°: $(cat /etc/os-release | grep PRETTY_NAME | cut -d= -f2 | tr -d '\"')"
echo "üìå –í–µ—Ä—Å–∏—è —è–¥—Ä–∞: $(uname -r)"
echo "üìå –í–Ω–µ—à–Ω–∏–π IP-–∞–¥—Ä–µ—Å: $(curl -s ifconfig.me)"
echo "üìå –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã –≤ firewalld: $(sudo firewall-cmd --list-ports)"
echo "üìå –°—Ç–∞—Ç—É—Å WireGuard: $(sudo systemctl is-active wg-quick@wg0)"
echo "üìå –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç: https://github.com/licht8/wg_qr_generator"
echo "======================================"

# –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ."

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω—é
echo -e "üîÑ –ó–∞–ø—É—Å–∫ –º–µ–Ω—é...\n"
python3 menu.py || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–µ–Ω—é."; exit 1; }
