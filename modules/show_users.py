#!/usr/bin/env python3
# modules/show_users.py
# –ú–æ–¥—É–ª—å –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ user_records.json

import os
import json

USER_RECORDS_JSON = os.path.join("user", "data", "user_records.json")

def show_all_users():
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ user_records.json."""
    if not os.path.exists(USER_RECORDS_JSON):
        print("‚ùå –§–∞–π–ª user_records.json –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    try:
        with open(USER_RECORDS_JSON, "r") as file:
            users = json.load(file)
            if not users:
                print("üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return

            print("\n========== –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ==========")
            for nickname, details in users.items():
                print(f"üë§ {nickname}")
            print("==========================================")
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è user_records.json.")
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
