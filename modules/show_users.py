#!/usr/bin/env python3
# modules/show_users.py
# –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö WireGuard

import os
import json
from gradio_admin.functions.format_helpers import format_time, calculate_time_remaining
from gradio_admin.wg_users_stats import load_data

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
USER_RECORDS_JSON = os.path.join("user", "data", "user_records.json")


def show_all_users():
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π."""
    if not os.path.exists(USER_RECORDS_JSON):
        print("‚ùå –§–∞–π–ª user_records.json –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    try:
        with open(USER_RECORDS_JSON, "r") as file:
            users = json.load(file)
            if not users:
                print("üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return

            print("\n========== –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ==========")
            for nickname, details in users.items():
                username = nickname
                allowed_ips = details.get("allowed_ips", "N/A")
                recent = details.get("last_handshake", "N/A")
                endpoint = details.get("endpoint", "N/A")
                up = details.get("uploaded", "N/A")
                down = details.get("downloaded", "N/A")
                status = details.get("status", "inactive")
                created = details.get("created", "N/A")
                expires = details.get("expiry", "N/A")

                # –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
                recent_emoji = "üü¢" if status == "active" else "üî¥"
                state_emoji = "‚úÖ" if status == "active" else "‚ùå"

                # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥
                print(f"üë§ User account : {username}")
                print(f"üìß User e-mail : user@mail.wg")
                print(f"üå± Created : {format_time(created)}")
                print(f"üî• Expires : {format_time(expires)}")
                print(f"üåê intIP {recent_emoji}  : {allowed_ips}")
                print(f"‚¨ÜÔ∏è up : {up}")
                print(f"üåé extIP {recent_emoji}  : {endpoint}")
                print(f"‚¨áÔ∏è dw : {down}")
                print(f"üìÖ TimeLeft : {calculate_time_remaining(expires)}")
                print(f"State : {state_emoji}")
                print("")

            print("==========================================")
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è user_records.json.")
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
