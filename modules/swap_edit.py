#!/usr/bin/env python3

"""
swap_edit.py - –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–º –ø–æ–¥–∫–∞—á–∫–∏ (swap) –≤ Linux

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è swap.
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≥–∏–±–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
  * `--memory_required` –∏–ª–∏ `--mr`: –ù–∞–∑–Ω–∞—á–∞–µ—Ç swap –¥–æ 10% –æ—Ç –æ–±—ä–µ–º–∞ –¥–∏—Å–∫–∞.
  * `--min_swap` –∏–ª–∏ `--ms`: –°–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π swap (64 MB).
  * `--eco_swap`: –°–æ–∑–¥–∞–µ—Ç swap —Ä–∞–∑–º–µ—Ä–æ–º 2% –æ—Ç –æ–±—ä–µ–º–∞ –¥–∏—Å–∫–∞.
  * `--erase_swap`: –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç swap.
"""

import os
import sys
import shutil
import subprocess
from pathlib import Path
from argparse import ArgumentParser
from prettytable import PrettyTable

CURRENT_DIR = Path(__file__).resolve().parent
PROJECT_DIR = CURRENT_DIR.parent
sys.path.append(str(PROJECT_DIR))

from settings import PRINT_SPEED
from ai_diagnostics.ai_diagnostics import display_message_slowly


def run_command(command, check=True):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ –≤–µ—Ä–Ω—É—Ç—å –≤—ã–≤–æ–¥."""
    try:
        result = subprocess.run(
            command, shell=True, text=True, check=check, stdout=subprocess.PIPE, stderr=subprocess.PIPE
        )
        return result.stdout.strip()
    except subprocess.CalledProcessError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e.stderr.strip()}")
        return None


def check_root():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root."""
    if os.geteuid() != 0:
        display_message_slowly("üö® –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (root).", indent=False)
        exit(1)


def display_table(data, headers):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏."""
    table = PrettyTable(headers)
    for row in data:
        table.add_row(row)
    return table


def get_swap_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ swap –∏ –ø–∞–º—è—Ç–∏."""
    output = run_command("free -h")
    if not output:
        return None

    headers = ["–¢–∏–ø", "–û–±—â–∏–π", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ", "–°–≤–æ–±–æ–¥–Ω–æ"]
    rows = []
    for line in output.split("\n"):
        parts = line.split()
        if len(parts) >= 4 and parts[0] in ("Mem:", "Swap:"):
            rows.append(parts[:4])

    return display_table(rows, headers)


def disable_existing_swap(swap_file="/swap"):
    """–û—Ç–∫–ª—é—á–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏, –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è."""
    if os.path.exists(swap_file):
        display_message_slowly(f"\n   üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π swap-—Ñ–∞–π–ª: {swap_file}")
        run_command(f"swapoff {swap_file}", check=False)
        try:
            os.remove(swap_file)
            display_message_slowly(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π swap-—Ñ–∞–π–ª: {swap_file}")
        except Exception as e:
            display_message_slowly(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª: {e}")


def create_swap_file(size_mb, reason=None):
    """–°–æ–∑–¥–∞—Ç—å –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏."""
    try:
        swap_file = "/swap"
        disable_existing_swap(swap_file)

        display_message_slowly(f"   üõ†Ô∏è –°–æ–∑–¥–∞—é —Ñ–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–º {size_mb} MB...")
        run_command(f"dd if=/dev/zero of={swap_file} bs=1M count={size_mb}", check=True)

        display_message_slowly("   üé® –§–æ—Ä–º–∞—Ç–∏—Ä—É—é —Ñ–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏...")
        run_command(f"mkswap {swap_file}", check=True)

        display_message_slowly("   ‚ö° –ê–∫—Ç–∏–≤–∏—Ä—É—é —Ñ–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏...")
        run_command(f"swapon {swap_file}", check=True)

        display_message_slowly(f"\n   ‚úÖ Swap —Å–æ–∑–¥–∞–Ω. –†–∞–∑–º–µ—Ä: {size_mb} MB")
        if reason:
            display_message_slowly(f"   üîç –ó–∞–ø—Ä–æ—à–µ–Ω {reason}")

    except Exception as e:
        display_message_slowly(f"   ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


def swap_edit(size_mb=None, action=None, silent=False):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ swap."""
    check_root()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è swap
    current_swap = run_command("free -m | awk '/^Swap:/ {print $2}'")
    current_swap = int(current_swap) if current_swap else 0

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä swap –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    if action == "micro":
        size_mb = 64  # –†–∞–∑–º–µ—Ä swap –¥–ª—è –º–∏–∫—Ä–æ—Ä–µ–∂–∏–º–∞
        silent = True
    elif action == "min":
        size_mb = 64
    elif action == "eco":
        total_disk = int(run_command("df --total | tail -1 | awk '{print $2}'")) // 1024
        size_mb = total_disk // 50  # 2% –æ—Ç –æ–±—ä–µ–º–∞ –¥–∏—Å–∫–∞

    # –î–µ–π—Å—Ç–≤–∏–µ "erase" –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
    if action == "erase":
        disable_existing_swap()
        if not silent:
            display_message_slowly("   ‚úÖ Swap —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
        return

    # –ï—Å–ª–∏ silent=True, –Ω–µ –≤—ã–≤–æ–¥–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if not silent:
        display_message_slowly("üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–º—è—Ç–∏:")
        swap_info = get_swap_info()
        if swap_info:
            print(swap_info)

    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è swap
    if size_mb is not None and current_swap >= size_mb:
        if not silent:
            display_message_slowly(
                f"‚úÖ –¢–µ–∫—É—â–∏–π swap ({current_swap} MB) —É–∂–µ –æ–ø—Ç–∏–º–∞–ª–µ–Ω. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --erase_swap."
            )
        return

    # –°–æ–∑–¥–∞–µ–º swap, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ–Ω—å—à–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if size_mb is not None and current_swap < size_mb:
        if not silent:
            display_message_slowly(f"üîç –¢–µ–∫—É—â–∏–π swap ({current_swap} MB) –º–µ–Ω—å—à–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–≥–æ ({size_mb} MB). –°–æ–∑–¥–∞—é swap.")
        create_swap_file(size_mb, reason=action)

    # –ï—Å–ª–∏ silent=True, –∑–∞–≤–µ—Ä—à–∏—Ç—å –±–µ–∑ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if silent:
        return

    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–º—è—Ç–∏
    display_message_slowly("üìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–º—è—Ç–∏:")
    final_swap_info = get_swap_info()
    if final_swap_info:
        print(final_swap_info)


if __name__ == "__main__":
    parser = ArgumentParser(description="–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è swap-—Ñ–∞–π–ª–æ–º.")
    parser.add_argument("--memory_required", "--mr", type=int, help="–£–∫–∞–∑–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º swap –≤ MB.")
    parser.add_argument("--min_swap", "--ms", action="store_true", help="–°–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π swap (64 MB).")
    parser.add_argument("--eco_swap", action="store_true", help="–°–æ–∑–¥–∞—Ç—å eco swap (2% –æ—Ç –æ–±—ä–µ–º–∞ –¥–∏—Å–∫–∞).")
    parser.add_argument("--micro_swap", action="store_true", help="–°–æ–∑–¥–∞—Ç—å swap —Ä–∞–∑–º–µ—Ä–æ–º 64 MB –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ.")
    parser.add_argument("--erase_swap", action="store_true", help="–£–¥–∞–ª–∏—Ç—å swap.")
    args = parser.parse_args()

    if args.erase_swap:
        swap_edit(action="erase")
    elif args.eco_swap:
        swap_edit(action="eco")
    elif args.min_swap:
        swap_edit(action="min")
    elif args.micro_swap:
        swap_edit(action="micro", silent=True)
    elif args.memory_required:
        swap_edit(size_mb=args.memory_required, action="memory_required")
    else:
        swap_edit()

"""
### –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ `swap_edit.py` –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ docs/


"""
