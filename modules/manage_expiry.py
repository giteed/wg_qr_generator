#!/usr/bin/env python3
# modules/manage_expiry.py
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è VPN –∞–∫–∫–∞—É–Ω—Ç–æ–≤ WireGuard

import argparse
import os
import sys
import json
from modules.account_expiry import check_expiry, extend_expiry, reset_expiry

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
WG_USERS_JSON = os.path.join("logs", "wg_users.json")
USER_RECORDS_JSON = os.path.join("user", "data", "user_records.json")


def load_json_data(filepath):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞."""
    try:
        with open(filepath, "r") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}


def get_wg_show_data():
    """–ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã 'wg show'. –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤."""
    return {
        "npQbtI10aPl+SMUCsGunbTh7P/qhzEkXaTsL/twfQ14=": {
            "allowed_ips": "10.66.66.5/32",
            "latest_handshake": "2 minutes, 41 seconds ago",
            "transfer": "504.86 MiB received, 5.96 GiB sent",
            "status": "active",
        },
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    }


def format_user_info(nickname, records, wg_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."""
    info = records.get(nickname, {})
    wg_info = wg_data.get(info.get("peer"), {})

    uploaded = wg_info.get("transfer", "N/A").split("received, ")[1] if "received, " in wg_info.get("transfer", "") else "N/A"
    downloaded = wg_info.get("transfer", "N/A").split(" received, ")[0] if " received, " in wg_info.get("transfer", "") else "N/A"

    return f"""
üë§ User: {nickname}
üåê Internal IP: {info.get('allowed_ips', 'N/A')}
üåé External IP: {wg_info.get('endpoint', 'N/A')}
‚¨ÜÔ∏è Uploaded: {uploaded}
‚¨áÔ∏è Downloaded: {downloaded}
üìÖ Last handshake: {wg_info.get('latest_handshake', 'N/A')}
üî• Status: {wg_info.get('status', 'inactive')}
‚úÖ Expiry: {info.get('expiry', 'N/A')}
"""


def show_all_users(records, wg_data):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π."""
    if not records:
        print("‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    print("\n========== –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ==========")
    for nickname in records.keys():
        print(format_user_info(nickname, records, wg_data).strip())
        print("-" * 40)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    print("==========================================")


def main():
    parser = argparse.ArgumentParser(
        description="–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è VPN –∞–∫–∫–∞—É–Ω—Ç–æ–≤ WireGuard"
    )

    subparsers = parser.add_subparsers(dest="action", help="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ show
    show_parser = subparsers.add_parser("show", help="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ check
    check_parser = subparsers.add_parser("check", help="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∏—Å—Ç–µ–∫ –ª–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞")
    check_parser.add_argument("nickname", type=str, help="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ extend
    extend_parser = subparsers.add_parser("extend", help="–ü—Ä–æ–¥–ª–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞")
    extend_parser.add_argument("nickname", type=str, help="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è")
    extend_parser.add_argument("days", type=int, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è")

    # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ reset
    reset_parser = subparsers.add_parser("reset", help="–°–±—Ä–æ—Å–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞")
    reset_parser.add_argument("nickname", type=str, help="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ä–æ–∫–∞")
    reset_parser.add_argument(
        "--days", type=int, default=30,
        help="–ù–æ–≤—ã–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤ –¥–Ω—è—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 –¥–Ω–µ–π)"
    )

    args = parser.parse_args()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    wg_users = load_json_data(WG_USERS_JSON)
    user_records = load_json_data(USER_RECORDS_JSON)
    wg_show = get_wg_show_data()

    try:
        if args.action == "show":
            show_all_users(user_records, wg_show)

        elif args.action == "check":
            if args.nickname in user_records:
                print(format_user_info(args.nickname, user_records, wg_show))
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {args.nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        elif args.action == "extend":
            if args.nickname in user_records:
                extend_expiry(args.nickname, args.days)
                print(f"‚úÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ {args.nickname} –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ {args.days} –¥–Ω–µ–π.")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {args.nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        elif args.action == "reset":
            if args.nickname in user_records:
                reset_expiry(args.nickname, args.days)
                print(f"‚úÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ {args.nickname} —Å–±—Ä–æ—à–µ–Ω –Ω–∞ {args.days} –¥–Ω–µ–π.")
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {args.nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        else:
            parser.print_help()

    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
