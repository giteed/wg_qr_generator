#!/usr/bin/env python3
# modules/port_helper.py
# –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–∞–º–∏

import os
import signal
import psutil

def check_port_and_handle(port):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–Ω—è—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç, –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    
    :param port: –ù–æ–º–µ—Ä –ø–æ—Ä—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.
    :return: None
    """
    for conn in psutil.net_connections(kind="inet"):
        if conn.laddr.port == port:
            pid = conn.pid
            if pid is not None:
                process = psutil.Process(pid)
                print(f"‚ö†Ô∏è –ü–æ—Ä—Ç {port} —É–∂–µ –∑–∞–Ω—è—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º:")
                print(f" - PID: {pid}")
                print(f" - –ò–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞: {process.name()}")
                print(f" - –ö–æ–º–∞–Ω–¥–∞: {' '.join(process.cmdline())}\n")

                choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: [k] –£–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å / [i] –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–π—Ç–∏: ").strip().lower()
                if choice == "k":
                    try:
                        os.kill(pid, signal.SIGKILL)
                        print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å PID {pid} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
                else:
                    print("üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é.")
                    return False
            else:
                print(f"‚ö†Ô∏è –ü–æ—Ä—Ç {port} –∑–∞–Ω—è—Ç, –Ω–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω.")
                return False
    return True
