#!/usr/bin/env python3
# modules/install_wg.py
# ===========================================
# –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ WireGuard —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
# –í–µ—Ä—Å–∏—è 1.2
# ===========================================

import os
import time
import subprocess
import traceback
from pathlib import Path
import shutil
import base64
from settings import (
    PRINT_SPEED,
    WG_CONFIG_DIR,
    QR_CODE_DIR,
    SERVER_CONFIG_FILE,
    LOG_FILE_PATH,
    LOG_LEVEL,
    DEFAULT_TRIAL_DAYS,
)
from modules.firewall_utils import get_external_ip
from ai_diagnostics.ai_diagnostics import display_message_slowly
import qrcode


def log_message(message: str, level: str = "INFO"):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-—Ñ–∞–π–ª —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
    if LOG_LEVEL == "DEBUG" or level != "DEBUG":
        timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
        log_entry = f"{timestamp} - {level} - {message}\n"
        with open(LOG_FILE_PATH, "a") as log_file:
            log_file.write(log_entry)


def display_message(message, print_speed=None):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–º–∏—Ç–∞—Ü–∏–µ–π –ø–µ—á–∞—Ç–∏."""
    display_message_slowly(message, print_speed=print_speed)
    log_message(message)


def install_wireguard_package():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WireGuard —á–µ—Ä–µ–∑ –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä."""
    try:
        display_message("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ WireGuard...", print_speed=PRINT_SPEED)
        if shutil.which("apt"):
            subprocess.run(["sudo", "apt", "update"], check=True)
            subprocess.run(["sudo", "apt", "install", "-y", "wireguard"], check=True)
        elif shutil.which("yum"):
            subprocess.run(["sudo", "yum", "install", "-y", "epel-release"], check=True)
            subprocess.run(["sudo", "yum", "install", "-y", "wireguard-tools"], check=True)
        else:
            raise EnvironmentError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WireGuard.")
        verify_wireguard_installation()
        log_message("WireGuard —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ.", level="INFO")
    except subprocess.CalledProcessError as e:
        error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ WireGuard: {e}"
        display_message(f"‚ùå {error_message}", print_speed=PRINT_SPEED)
        log_message(error_message, level="ERROR")
        raise


def verify_wireguard_installation():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ WireGuard –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."""
    wg_path = shutil.which("wg")
    if not wg_path:
        raise FileNotFoundError("–ö–æ–º–∞–Ω–¥–∞ 'wg' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    try:
        version_output = subprocess.check_output([wg_path, "--version"], stderr=subprocess.STDOUT).decode().strip()
        wg_show_output = subprocess.run(
            [wg_path, "show"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )
        log_message(f"WireGuard –≤–µ—Ä—Å–∏—è: {version_output}", level="INFO")
        if wg_show_output.returncode != 0:
            log_message(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã 'wg show': {wg_show_output.stderr.strip()}", level="WARNING")
        display_message(f"‚úÖ WireGuard —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {version_output}")
    except subprocess.CalledProcessError as e:
        raise RuntimeError(f"WireGuard —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –∫–æ–º–∞–Ω–¥–∞ 'wg show' –≤–µ—Ä–Ω—É–ª–∞ –æ—à–∏–±–∫—É: {e}")


def verify_firewalld():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤–∫–ª—é—á–∞–µ—Ç firewalld."""
    try:
        firewall_state = subprocess.run(
            ["firewall-cmd", "--state"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )
        if "running" not in firewall_state.stdout:
            display_message("‚ö†Ô∏è  Firewalld –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞...", print_speed=PRINT_SPEED)
            subprocess.run(["sudo", "systemctl", "start", "firewalld"], check=True)
            log_message("Firewalld —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.", level="INFO")
    except subprocess.CalledProcessError as e:
        log_message(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ firewalld: {e}", level="ERROR")
        display_message(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ firewalld: {e}")


def verify_masquerade():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –º–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥–∞."""
    try:
        masquerade_check = subprocess.run(
            ["firewall-cmd", "--query-masquerade"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )
        if "yes" not in masquerade_check.stdout:
            display_message("üîß –í–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥–∞...", print_speed=PRINT_SPEED)
            subprocess.run(["sudo", "firewall-cmd", "--add-masquerade"], check=True)
            subprocess.run(["sudo", "firewall-cmd", "--runtime-to-permanent"], check=True)
            log_message("–ú–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω.", level="INFO")
    except subprocess.CalledProcessError as e:
        log_message(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥–∞: {e}", level="ERROR")
        display_message(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥–∞: {e}")


def install_wireguard():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WireGuard —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∏ –æ—Ç–ª–∞–¥–∫–æ–π."""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        create_directory(WG_CONFIG_DIR)
        create_directory(QR_CODE_DIR)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
        if SERVER_CONFIG_FILE.exists():
            display_message("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª WireGuard.")
            overwrite = input("‚ö†Ô∏è   –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª? (yes/no): ").strip().lower()
            if overwrite != "yes":
                display_message("‚õî –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –í—ã—Ö–æ–¥.", print_speed=PRINT_SPEED)
                log_message("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard –æ—Ç–º–µ–Ω–µ–Ω–∞: —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", level="WARNING")
                return
            else:
                log_message(f"–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {SERVER_CONFIG_FILE}")

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard
        install_wireguard_package()
        verify_wireguard_installation()
        verify_firewalld()
        verify_masquerade()

        # –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∫–ª–∏–µ–Ω—Ç–∞)
        # (–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞—à–µ–≥–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ install_wireguard –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∑–¥–µ—Å—å)

    except Exception as e:
        error_message = f"‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: {e}"
        display_message(error_message, print_speed=PRINT_SPEED)
        log_message(error_message, level="ERROR")
        log_message(traceback.format_exc(), level="ERROR")
