#!/usr/bin/env python3
# main_interface.py
# –ì–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Gradio –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º wg_qr_generator

import sys
import os
import gradio as gr

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
sys.path.insert(0, project_root)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –ø–µ—Ä–≤—ã–º

from modules.port_manager import handle_port_conflict  # –ò–º–ø–æ—Ä—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–∞–º–∏

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫–∏
from gradio_admin.tabs.delete_user_tab import delete_user_tab
from gradio_admin.tabs.statistics_tab import statistics_tab

ADMIN_PORT = 7860  # –ü–æ—Ä—Ç –¥–ª—è Gradio

def launch_gradio_interface():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞, —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç Gradio –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    """
    conflict_action = handle_port_conflict(ADMIN_PORT)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ä—Ç–∞

    if conflict_action in {"ignore", "exit"}:
        return  # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

    if conflict_action == "kill":
        print(f"üîÑ –ü–æ—Ä—Ç {ADMIN_PORT} –æ—Å–≤–æ–±–æ–∂–¥—ë–Ω. –ó–∞–ø—É—Å–∫ Gradio...")

    # –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Gradio
    with gr.Blocks(css="style.css") as admin_interface:
        # –í–∫–ª–∞–¥–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        with gr.Tab("üå± Create"):
            with gr.Row():
                gr.Markdown("## Create a new user")
            with gr.Column(scale=1, min_width=300):
                username_input = gr.Textbox(label="Username", placeholder="Enter username...")
                create_button = gr.Button("Create User")
                create_output = gr.Textbox(label="Result", interactive=False)
                qr_code_image = gr.Image(label="QR Code", visible=False)

                def handle_create_user(username):
                    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è QR-–∫–æ–¥–∞."""
                    from gradio_admin.create_user import create_user
                    result, qr_code_path = create_user(username)
                    if qr_code_path:
                        return result, gr.update(visible=True, value=qr_code_path)
                    return result, gr.update(visible=False)

                create_button.click(
                    handle_create_user,
                    inputs=username_input,
                    outputs=[create_output, qr_code_image]
                )

        # –í–∫–ª–∞–¥–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        delete_user_tab()

        # –í–∫–ª–∞–¥–∫–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π WireGuard
        statistics_tab()

    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    admin_interface.launch(server_name="0.0.0.0", server_port=ADMIN_PORT, share=True)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    launch_gradio_interface()
