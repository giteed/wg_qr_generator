#!/usr/bin/env python3
# delete_user.py
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ wg_qr_generator

import os
import subprocess
from datetime import datetime
from modules.utils import read_json, write_json, get_wireguard_config_path, check_wireguard_status

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–∞–Ω–∞–ª–æ–≥ log_debug)
def log_debug(message, level="DEBUG"):
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å —Å –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞–º–∏.
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞.
    :param level: –£—Ä–æ–≤–µ–Ω—å —Å–æ–æ–±—â–µ–Ω–∏—è ("INFO", "DEBUG", "ERROR").
    """
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S,%f")[:-3]  # –û—Å—Ç–∞–≤–ª—è–µ–º –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
    print(f"{timestamp} - {level:<8} ‚ÑπÔ∏è  {message}")

def delete_user(username):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.
    :param username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    :return: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.
    """
    log_debug("---------- –ü—Ä–æ—Ü–µ—Å—Å üî• —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----------", level="INFO")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ WireGuard –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
    wg_status = check_wireguard_status()
    if not wg_status["active"]:
        log_debug("‚ùå WireGuard –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.", level="ERROR")
        return "‚ùå WireGuard –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞."

    log_debug(f"üåê WireGuard –∞–∫—Ç–∏–≤–µ–Ω: {wg_status['status']}", level="INFO")
    log_debug(f"üõ°Ô∏è –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã: {wg_status['ports']}", level="INFO")

    base_dir = os.getcwd()
    user_records_path = os.path.join(base_dir, "user", "data", "user_records.json")
    wg_config_path = get_wireguard_config_path()

    log_debug(f"‚û°Ô∏è –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '{username}'.")

    if not os.path.exists(user_records_path):
        log_debug(f"‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω: {user_records_path}", level="ERROR")
        return "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."

    try:
        # –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_data = read_json(user_records_path)
        log_debug(f"üìÇ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

        if username not in user_data:
            log_debug(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö.", level="ERROR")
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."

        # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_info = user_data.pop(username)
        user_info["removed_at"] = datetime.now().isoformat()
        write_json(user_records_path, user_data)
        log_debug(f"üìù –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}' —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö.")

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        public_key = extract_public_key(username, wg_config_path)
        if not public_key:
            log_debug(f"‚ùå –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard.", level="ERROR")
            return f"‚ùå –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ WireGuard
        subprocess.run(["sudo", "wg", "set", "wg0", "peer", public_key, "remove"], check=True)
        log_debug(f"üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —É–¥–∞–ª–µ–Ω –∏–∑ WireGuard.")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard
        remove_peer_from_config(public_key, wg_config_path, username)
        log_debug(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")

        log_debug("---------- –ü—Ä–æ—Ü–µ—Å—Å üî• —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω ----------", level="INFO")
        return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω."
    except Exception as e:
        log_debug(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}': {str(e)}", level="ERROR")
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}': {str(e)}"

def extract_public_key(username, config_path):
    """
    –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard.
    :param username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param config_path: –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É WireGuard.
    :return: –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    log_debug(f"üîç –ü–æ–∏—Å–∫ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}' –≤ {config_path}.")
    try:
        with open(config_path, "r") as f:
            lines = f.readlines()

        found_username = False
        for line in lines:
            if username in line:
                found_username = True
            elif found_username and line.strip().startswith("PublicKey"):
                public_key = line.split("=", 1)[1].strip()
                log_debug(f"üîë –ù–∞–π–¥–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è '{username}': {public_key}")
                return public_key
        log_debug(f"‚ùå –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω.", level="ERROR")
        return None
    except Exception as e:
        log_debug(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞: {str(e)}", level="ERROR")
        return None

def remove_peer_from_config(public_key, config_path, client_name):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ [Peer] –∏ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ WireGuard.
    –£–¥–∞–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ 4 —Å—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—è —Å –Ω–µ–≥–æ.
    :param public_key: –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param config_path: –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É WireGuard.
    :param client_name: –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞.
    """
    log_debug(f"üõ†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{client_name}' –∏–∑ {config_path}.")

    try:
        with open(config_path, "r") as f:
            lines = f.readlines()

        updated_lines = []
        skip_lines = 0  # –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞

        for i, line in enumerate(lines):
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞
            if line.strip() == f"### Client {client_name}":
                log_debug(f"üìå –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ –¥–ª—è '{client_name}' –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i}. –£–¥–∞–ª—è–µ–º...")
                skip_lines = 5  # –£–¥–∞–ª—è–µ–º 5 —Å—Ç—Ä–æ–∫ –Ω–∞—á–∏–Ω–∞—è —Å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞
                continue

            # –ü—Ä–æ–ø—É—Å–∫ —Å—Ç—Ä–æ–∫, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —É–¥–∞–ª—è–µ–º—ã–º –±–ª–æ–∫–æ–º
            if skip_lines > 0:
                log_debug(f"‚è© –ü—Ä–æ–ø—É—Å–∫ —Å—Ç—Ä–æ–∫–∏ {i}: {line.strip()}")
                skip_lines -= 1
                continue

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫
            updated_lines.append(line)

        # –ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        with open(config_path, "w") as f:
            f.writelines(updated_lines)

        log_debug(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{client_name}' —É–¥–∞–ª–µ–Ω–∞.")
    except Exception as e:
        log_debug(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}", level="ERROR")
