import os
import json
from datetime import datetime

USER_RECORDS_PATH = os.path.join("user", "data", "user_records.json")

def list_users():
    """–ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ—Å—Ç–∞—Ç–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏."""
    if not os.path.exists(USER_RECORDS_PATH):
        return "‚ùå –§–∞–π–ª user_records.json –Ω–µ –Ω–∞–π–¥–µ–Ω."

    try:
        with open(USER_RECORDS_PATH, "r") as f:
            user_data = json.load(f)

        if not user_data:
            return "‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."

        users_list = []
        for username, details in user_data.items():
            created_at = details.get("created_at", "N/A")
            expires_at = details.get("expires_at", "N/A")
            address = details.get("address", "N/A")

            # –†–∞—Å—Å—á–∏—Ç–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
            try:
                expires_datetime = datetime.fromisoformat(expires_at)
                remaining_time = expires_datetime - datetime.now()
                remaining_days = remaining_time.days
                remaining_str = f"{remaining_days} –¥–Ω–µ–π" if remaining_days > 0 else "–ò—Å—Ç–µ–∫"
            except Exception:
                remaining_str = "–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è"

            user_info = (
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
                f"   üìÖ –°–æ–∑–¥–∞–Ω: {created_at}\n"
                f"   ‚è≥ –ò—Å—Ç–µ–∫–∞–µ—Ç: {expires_at}\n"
                f"   ‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {remaining_str}\n"
                f"   üåê –ê–¥—Ä–µ—Å: {address}"
            )
            users_list.append(user_info)

        return "\n\n".join(users_list)

    except json.JSONDecodeError:
        return "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ user_records.json. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ —Ñ–æ—Ä–º–∞—Ç."
