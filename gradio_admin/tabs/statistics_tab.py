#!/usr/bin/env python3
# statistics_tab.py
# –í–∫–ª–∞–¥–∫–∞ "Statistics" Gradio-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ wg_qr_generator

import gradio as gr
import json
import os
from settings import USER_DB_PATH  # –ü—É—Ç—å –∫ JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


def load_user_records():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ JSON."""
    print("[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ JSON...")
    if not os.path.exists(USER_DB_PATH):
        print("[ERROR] –§–∞–π–ª JSON —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return {}

    with open(USER_DB_PATH, "r") as f:
        data = json.load(f)
    print(f"[DEBUG] –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
    return data


def prepare_user_choices(show_inactive=True):
    """–°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è Dropdown."""
    print(f"[DEBUG] –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. Show inactive: {show_inactive}")
    user_records = load_user_records()
    user_choices = []

    for user in user_records.values():
        if not show_inactive and user.get("status") != "active":
            continue
        user_choices.append(f"{user['username']} ({user['user_id']})")
    
    print(f"[DEBUG] –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(user_choices)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –≤—ã–±–æ—Ä–∞.")
    return user_choices


def get_user_info(selected_user):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."""
    print(f"[DEBUG] –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {selected_user}")
    if not selected_user:
        print("[INFO] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ–ª–µ –≤—ã—à–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."

    user_id = selected_user.split("(")[-1].strip(")")
    user_records = load_user_records()
    for user in user_records.values():
        if user.get("user_id") == user_id:
            print(f"[DEBUG] –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get('username')}")
            return json.dumps(user, indent=4)
    
    print("[WARNING] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥."


def dummy_action(selected_user):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫."""
    if not selected_user:
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π."
    return f"–î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {selected_user}"


def statistics_tab():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª–∞–¥–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    with gr.Tab("üîç Statistics"):
        gr.Markdown("## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ WireGuard")

        # –§–∏–ª—å—Ç—Ä—ã –∏ –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        with gr.Row():
            show_inactive_checkbox = gr.Checkbox(label="Show inactive users", value=True)
            refresh_button = gr.Button("Refresh List")

        # –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_dropdown = gr.Dropdown(
            choices=prepare_user_choices(),
            label="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞",
            interactive=True
        )

        # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        user_info_box = gr.Textbox(
            label="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            lines=10,
            interactive=False,
            value="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ–ª–µ –≤—ã—à–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."
        )

        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        with gr.Row():
            block_button = gr.Button("Block User")
            delete_button = gr.Button("Delete User")
            archive_button = gr.Button("Archive User")

        # –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        def update_user_choices(show_inactive):
            print("[DEBUG] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            choices = prepare_user_choices(show_inactive)
            return {"choices": choices, "value": None}

        refresh_button.click(fn=update_user_choices, inputs=[show_inactive_checkbox], outputs=user_dropdown)
        user_dropdown.change(fn=get_user_info, inputs=[user_dropdown], outputs=user_info_box)
        block_button.click(fn=dummy_action, inputs=[user_dropdown], outputs=user_info_box)
        delete_button.click(fn=dummy_action, inputs=[user_dropdown], outputs=user_info_box)
        archive_button.click(fn=dummy_action, inputs=[user_dropdown], outputs=user_info_box)
