#!/usr/bin/env python3
# gradio_admin/tabs/command_line_tab.py
# –í–∫–ª–∞–¥–∫–∞ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞

import gradio as gr
import subprocess


def run_command(command, current_history):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    
    :param command: –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
    :param current_history: –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥.
    :return: –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥.
    """
    try:
        result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        output = result.stdout.strip() if result.returncode == 0 else result.stderr.strip()
        return f"{current_history}\n$ {command}\n{output}"
    except Exception as e:
        return f"{current_history}\n$ {command}\n–û—à–∏–±–∫–∞: {str(e)}"


def run_project():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç —á–µ—Ä–µ–∑ gradio_cli.py.
    """
    try:
        result = subprocess.run(
            ["python3", "gradio_admin/gradio_cli.py"],
            stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True
        )
        output = result.stdout.strip() or result.stderr.strip()
        return f"$ python3 gradio_admin/gradio_cli.py\n{output}"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: {str(e)}"


def create_command_line_tab():
    """
    –í–∫–ª–∞–¥–∫–∞ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞.
    """
    with gr.Row():
        gr.Markdown("### üíª –≠–º—É–ª—è—Ü–∏—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏")
    
    # –ü–æ–ª–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥
    console_output = gr.Textbox(label="–ö–æ–Ω—Å–æ–ª—å", value="", lines=15, interactive=False)
    
    # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã
    command_input = gr.Textbox(label="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É", placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    execute_button = gr.Button("–í—ã–ø–æ–ª–Ω–∏—Ç—å")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    run_project_button = gr.Button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
    
    # –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
    def handle_command(command, history):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é.
        """
        return run_command(command, history)
    
    # –õ–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    def handle_run_project(history):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ gradio_cli.py.
        """
        return f"{history}\n{run_project()}"
    
    # –°–≤—è–∑—å –∫–Ω–æ–ø–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    execute_button.click(handle_command, inputs=[command_input, console_output], outputs=console_output)
    run_project_button.click(handle_run_project, inputs=[console_output], outputs=console_output)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    return [console_output, command_input, execute_button, run_project_button]
